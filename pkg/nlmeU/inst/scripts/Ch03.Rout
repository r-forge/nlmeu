
R version 2.15.1 (2012-06-22) -- "Roasted Marshmallows"
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: i386-pc-mingw32/i386 (32-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> ###################################################
> ###
> ### code chunk: Ch03Init
> ###
> ### ARMD Trial: Visual acuity (Section 3.2)
> ### 
> ###################################################
> options(width = 65, digits = 5, show.signif.stars = FALSE)
> date()
[1] "Mon Feb 18 18:57:35 2013"
> packageVersion("nlmeU")
[1] '0.30.4'
> packageVersion("nlme")
[1] '3.1.104'
> packageVersion("reshape")
[1] '0.8.4'
> packageVersion("plyr")
[1] '1.7.1'
> packageVersion("lattice")
[1] '0.20.6'
> sessionInfo()
R version 2.15.1 (2012-06-22)
Platform: i386-pc-mingw32/i386 (32-bit)

locale:
[1] LC_COLLATE=C                          
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods  
[7] base     
> 
> ylims <- c(0, 90) 
> 
> ###################################################
> ### code chunk: R3.1
> ###################################################
> data(armd.wide, armd0, package = "nlmeU")       # Data loaded
> library(lattice)
> armd0.subset <-                                 # Subset
+   subset(armd0, as.numeric(subject) %in% seq(1, 240, 10))
> xy1 <-                                          # Draft plot 
+   xyplot(visual ~ jitter(time) | treat.f, 
+          groups = subject, 
+          data = armd0.subset, 
+          type = "l", lty = 1)  
> update(xy1,                                     # Fig. 3.1
+        xlab = "Time (in weeks)",
+        ylab = "Visual acuity",
+        grid = "h")
> detach(package:lattice)
> 
> ###################################################
> ### code chunk: R3.2
> ###################################################
> table(armd.wide$miss.pat)

---- ---X --X- --XX -XX- -XXX X--- X-XX XXXX 
 188   24    4    8    1    6    2    1    6 
> with(armd.wide, table(miss.pat))
miss.pat
---- ---X --X- --XX -XX- -XXX X--- X-XX XXXX 
 188   24    4    8    1    6    2    1    6 
> xtabs(~miss.pat, armd.wide)
miss.pat
---- ---X --X- --XX -XX- -XXX X--- X-XX XXXX 
 188   24    4    8    1    6    2    1    6 
> 
> ###################################################
> ### code chunk: R3.3a
> ###################################################
> attach(armd0)
> flst <- list(time.f, treat.f)                    # "By" factors
> (tN <-                                           # Counts
+   tapply(visual, flst,
+          FUN = function(x) length(x[!is.na(x)])))
         Placebo Active
Baseline     119    121
4wks         117    114
12wks        117    110
24wks        112    102
52wks        105     90
> 
> ###################################################
> ### code chunk: R3.3b
> ###################################################
> tMn <- tapply(visual, flst, FUN = mean)          # Sample means
> tMd <- tapply(visual, flst, FUN = median)        # Sample medians
> colnames(res  <- cbind(tN, tMn, tMd))            # Column names
[1] "Placebo" "Active"  "Placebo" "Active"  "Placebo" "Active" 
> nms1 <- rep(c("P", "A"), 3)
> nms2 <- rep(c("n", "Mean", "Mdn"), rep(2, 3))
> colnames(res) <- paste(nms1, nms2, sep = ":")    # New column names
> res
         P:n A:n P:Mean A:Mean P:Mdn A:Mdn
Baseline 119 121 55.336 54.579  56.0  57.0
4wks     117 114 53.966 50.912  54.0  52.0
12wks    117 110 52.872 48.673  53.0  49.5
24wks    112 102 49.330 45.461  50.5  45.0
52wks    105  90 44.438 39.100  44.0  37.0
> detach(armd0)
> 
> ###################################################
> ### code chunk: R3.4 (Fig. 3.2, no horizontal grid lines)
> ###################################################
>  library(lattice)
>  bw1 <-                                            # Draft plot
+    bwplot(visual ~ time.f | treat.f, 
+           data = armd0)         
>  xlims <- c("Base", "4\nwks", "12\nwks", "24\nwks", "52\nwks")
>  update(bw1, xlim = xlims, pch = "|")              # Final plot
>  detach(package:lattice)
> 
> 
> ###################################################
> ### code chunk: R3.4 (Fig. 3.2 horizontal grid lines added)
> ###################################################
> 
> library(lattice)
> myPanel <- function(x,y, subscripts, ...){
+   panel.grid(h=-1, v=0)    
+   panel.bwplot(x,y, ...) 
+ }
> 
> bw1 <- bwplot(visual ~ time.f|treat.f,
+        data = armd0,
+        panel = myPanel, 
+        aspect = 1)
> xlims <- c("Base", "4\nwks", "12\nwks","24\nwks","52\nwks")
> bw1a <- update(bw1, xlim = xlims, ylim = ylims, 
+   ylab= "Visual acuity", pch = "|") 
> print(bw1a)
> detach(package:lattice)
> 
> ###################################################
> ### code for figure 3.3 not included
> ###################################################
> 
> ###################################################
> ### code chunk: R3.5a
> ###################################################
> mnt.pat<-                                   # Monotone patterns
+   c("----", "---X", "--XX", "-XXX", "XXXX") 
> armd.wide.mnt <-                            # Data subset
+   subset(armd.wide, miss.pat %in% mnt.pat)
> dim(armd.wide.mnt)                          # Number of rows and cols  
[1] 232  10
> levels(armd.wide.mnt$miss.pat)              # Some levels not needed
[1] "----" "---X" "--X-" "--XX" "-XX-" "-XXX" "X---" "X-XX"
[9] "XXXX"
> 
> 
> ###################################################
> ### code chunk: R3.5b
> ###################################################
> armd.wide.mnt1 <- 
+   within(armd.wide.mnt, 
+          {
+            miss.pat <- factor(miss.pat, levels = mnt.pat) 
+          })
> levels(armd.wide.mnt1$miss.pat)              
[1] "----" "---X" "--XX" "-XXX" "XXXX"
> 
> ###################################################
> ### code chunk: R3.5c
> ###################################################
> with(armd.wide.mnt1, 
+      {
+        fl  <- list(treat.f, miss.pat)       # List of "by" factors
+        tapply(subject, fl, FUN=function(x) length(x[!is.na(x)]))
+      })
        ---- ---X --XX -XXX XXXX
Placebo  102    9    3    1    1
Active    86   15    5    5    5
> 
> ###################################################
> ### code chunk: Fig. 3.4
> ###################################################
> library(lattice)
> 
> my.lowerPanel <-  ## pairwise.complete.obs 
+   function(x, y, subscripts, ...){
+   panel.grid(h = -1, v = -1) 
+   panel.xyplot(x, y, ...)
+ }
> 
> my.upperPanel <-  ## pairwise.complete.obs 
+   function(x, y, subscripts, ...){
+   panel.xyplot(x, y, type = "n", ...)
+   corx <- round(cor(x,y,use = "complete.obs"),2)
+   abs.corx <- abs(corx)
+   cex.value <- 3
+   ltext(50,50, corx, cex = abs.corx* cex.value)
+ }
> 
> mySuperPanel <- function(z, subscripts, panel.subscripts,...){
+   # z is data frame. Abbreviated variable names on the diagonal of the splom.
+   panel.pairs(z, subscripts = subscripts,
+               panel.subscripts = panel.subscripts,
+               as.matrix = TRUE, 
+               upper.panel = "my.upperPanel",
+               lower.panel = "my.lowerPanel",
+ prepanel.limits = function(z) return(c(1, 90))
+ )}
> 
> splom.form <- formula( ~cbind(vis0, vis4, vis12, vis24, vis52))
> armd.wide.tmp <- subset(armd.wide, miss.pat == "----",
+      select = c(visual0, visual4, visual12, visual24, visual52))
> names(armd.wide.tmp) <- c("vis0", "vis4","vis12","vis24","vis52") # Short names
> 
> splom.object <- splom(splom.form,
+   data = armd.wide.tmp,
+   par.settings = list(fontsize = list(points = 4), axis.text = list(cex = 0.9)),
+   as.matrix =TRUE,  
+   xlab = "",
+   superpanel = mySuperPanel
+ )
> print(splom.object)
> detach(package:lattice)
> 
> ###################################################
> ### code chunk: R3.6
> ###################################################
> visual.x <- subset(armd.wide, select = c(visual0:visual52))
> (varx <- var(visual.x, use = "complete.obs")) # Var-cov mtx
         visual0 visual4 visual12 visual24 visual52
visual0   220.31  206.71   196.24   193.31   152.71
visual4   206.71  246.22   224.79   221.27   179.23
visual12  196.24  224.79   286.21   257.77   222.68
visual24  193.31  221.27   257.77   334.45   285.23
visual52  152.71  179.23   222.68   285.23   347.43
> print(cor(visual.x, use = "complete.obs"),    # Corr mtx
+       digits = 2) 
         visual0 visual4 visual12 visual24 visual52
visual0     1.00    0.89     0.78     0.71     0.55
visual4     0.89    1.00     0.85     0.77     0.61
visual12    0.78    0.85     1.00     0.83     0.71
visual24    0.71    0.77     0.83     1.00     0.84
visual52    0.55    0.61     0.71     0.84     1.00
> diag(varx)                  # Var-cov diagonal elements
 visual0  visual4 visual12 visual24 visual52 
  220.31   246.22   286.21   334.45   347.43 
> cov2cor(varx)               # Corr mtx (alternative way) 
         visual0 visual4 visual12 visual24 visual52
visual0  1.00000 0.88754  0.78153  0.71216  0.55199
visual4  0.88754 1.00000  0.84680  0.77107  0.61279
visual12 0.78153 0.84680  1.00000  0.83317  0.70618
visual24 0.71216 0.77107  0.83317  1.00000  0.83676
visual52 0.55199 0.61279  0.70618  0.83676  1.00000
> 
> 
> ###################################################
> ### code chunk: Cleanup for ARMD study
> ###################################################
> rm(xlims,ylims) 
> rm(xy1, flst, tN, tMn, tMd, nms1, nms2, res)
> rm(bw1, bw1a)
> rm(mnt.pat, armd.wide.mnt, armd.wide.mnt1)
> rm(armd.wide, armd.wide.tmp, armd0, armd0.subset)
> rm(myPanel, my.lowerPanel, my.upperPanel,  mySuperPanel, splom.object, splom.form)
> rm(visual.x, varx)
> 
> ###################################################
> ### PRT Study: Muscle fiber specific-force (Section 3.3)
> ### code chunk: R3.7
> ###################################################
> data(prt.subjects, prt, package = "nlmeU") # Data loaded
> with(prt.subjects, tapply(bmi, prt.f, summary))
$High
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   18.4    22.9    24.8    25.1    28.2    31.0 

$Low
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
   19.0    23.1    24.8    24.7    26.3    32.3 

> by(subset(prt.subjects, select = -id), prt.subjects$prt.f, summary)
prt.subjects$prt.f: High
  prt.f      age.f       sex.f         bmi      
 High:31   Young:15   Female:17   Min.   :18.4  
 Low : 0   Old  :16   Male  :14   1st Qu.:22.9  
                                  Median :24.8  
                                  Mean   :25.1  
                                  3rd Qu.:28.2  
                                  Max.   :31.0  
------------------------------------------------ 
prt.subjects$prt.f: Low
  prt.f      age.f       sex.f         bmi      
 High: 0   Young:15   Female:17   Min.   :19.0  
 Low :32   Old  :17   Male  :15   1st Qu.:23.1  
                                  Median :24.8  
                                  Mean   :24.7  
                                  3rd Qu.:26.3  
                                  Max.   :32.3  
> 
> 
> 
> ###################################################
> ### code chunk: R3.8a
> ###################################################
> fibL <- 
+    with(prt, 
+         tapply(spec.fo, 
+                list(id = id, fiberF = fiber.f, occF = occ.f), 
+                length))
> dimnms <- dimnames(fibL) 
> names(dimnms)         # Shortened names displayed
[1] "id"     "fiberF" "occF"  
> fibL["5", , ]         # Number of fiber measurements for subject 5
        occF
fiberF   Pre Pos
  Type 1  12  18
  Type 2   7   4
> fibL["335", , ]       # Number of fiber measurements for subject 335
        occF
fiberF   Pre Pos
  Type 1  NA   8
  Type 2  14  11
> 
> 
> ###################################################
> ### code chunk: R3.8b
> ###################################################
> fibM <-
+    with(prt, 
+         tapply(spec.fo, 
+                list(id = id, fiberF = fiber.f, occF = occ.f),
+                mean))
> fibM["5", , ]
        occF
fiberF      Pre    Pos
  Type 1 132.59 129.96
  Type 2 145.74 147.95
> 
>  
> ###################################################
> ### code chunk: R3.9a
> ###################################################
> 
> library(reshape)         
Loading required package: plyr

Attaching package: 'reshape'

The following object(s) are masked from 'package:plyr':

    rename, round_any

> idvar <- c("id", "prt.f", "fiber.f", "occ.f")
> meas.var <- c("spec.fo", "iso.fo")
> prtM <-                                        # Melting data
+   melt(prt, id.var = idvar, measure.var = meas.var) 
> dim(prtM)
[1] 4942    6
> head(prtM, n = 4)                              # First four rows
  id prt.f fiber.f occ.f variable value
1  5   Low  Type 1   Pre  spec.fo  83.5
2  5   Low  Type 1   Pre  spec.fo 132.8
3  5   Low  Type 2   Pre  spec.fo 161.1
4  5   Low  Type 1   Pre  spec.fo 158.8
> tail(prtM, n = 4)                              # Last four rows
      id prt.f fiber.f occ.f variable value
4939 520  High  Type 2   Pos   iso.fo 0.527
4940 520  High  Type 1   Pos   iso.fo 0.615
4941 520  High  Type 2   Pos   iso.fo 0.896
4942 520  High  Type 2   Pos   iso.fo 0.830
> 
> ###################################################
> ### code chunk: R3.9b
> ###################################################
> prtC <- cast(prtM, fun.aggregate = mean)       # Casting data
> names(prtC) 
[1] "id"      "prt.f"   "fiber.f" "occ.f"   "spec.fo" "iso.fo" 
> names(prtC)[5:6] <- c("spec.foMn", "iso.foMn") # Names modified
> head(prtC, n = 4)
  id prt.f fiber.f occ.f spec.foMn iso.foMn
1  5   Low  Type 1   Pre    132.59  0.51500
2  5   Low  Type 1   Pos    129.96  0.72289
3  5   Low  Type 2   Pre    145.74  0.47057
4  5   Low  Type 2   Pos    147.95  0.71175
> 
> ###################################################
> ### code chunk: Code for Figs: 3.5, 3.6, 3.7 not shown
> ###################################################
> 
> ###################################################
> ### code chunk: Cleanup for PRT study
> ###################################################
> rm(fibL, fibM, dimnms) 
> rm(idvar, meas.var, prtM, prtC)
> 
> ###################################################
> ### SII Project: Gain in the math achievement-score (Section 3.4)
> ### code chunk: R3.10
> ###################################################
> 
> data(SIIdata, package = "nlmeU")
> sapply(SIIdata, FUN = function(x) any(is.na(x)))
     sex minority mathkind mathgain      ses yearstea mathknow 
   FALSE    FALSE    FALSE    FALSE    FALSE    FALSE     TRUE 
housepov mathprep  classid schoolid  childid 
   FALSE    FALSE    FALSE    FALSE    FALSE 
> sum(as.numeric(is.na(SIIdata$mathknow)))
[1] 109
> range(SIIdata$mathknow, na.rm = TRUE)
[1] -2.50  2.61
> 
> ###################################################
> ### code chunk: R3.11
> ###################################################
> (schlN <- xtabs(~schoolid, SIIdata))  # Number of pupils per school
schoolid
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16 
 11  10  14   6   6  12  14  16   6  18  31  27   9  15  13   6 
 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32 
  9   4  11  12  17   4   5   8   7  15  21  10   8   3  22   9 
 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48 
 22   7  11   8  11   9  12   7   9  18   4  17   5  13  10   6 
 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 
  8  12   4   9   8  10  13  10   8   5   4  13  11  13   3  10 
 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80 
  9   8  12  16   5  19  27  11  10   3  15  27  24  15  12   7 
 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96 
  9  19  12  14  20   7  10   6   4   3  16   9  21  15   5   8 
 97  98  99 100 101 102 103 104 105 106 107 
  6   2  19  13  16  11   8   6  10   2  10 
> range(schlN)
[1]  2 31
> xtabs(~schlN) # Distribution of the number of pupils over schools
schlN
 2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 
 2  4  6  5  8  5  9  9 10  7  7  6  3  5  4  2  2  3  1  2  2 
24 27 31 
 1  3  1 
> 
> ###################################################
> ### code chunk: R3.12
> ###################################################
> attach(SIIdata)
> (mthgM <- by(cbind(mathgain, mathkind), schoolid, colMeans))
INDICES: 1
mathgain mathkind 
  59.636  458.364 
------------------------------------------------ 
INDICES: 2
mathgain mathkind 
    65.0    487.9 
------------------------------------------------ 
INDICES: 3
mathgain mathkind 
  88.857  469.143 
------------------------------------------------ 
INDICES: 4
mathgain mathkind 
  35.167  462.667 
------------------------------------------------ 
INDICES: 5
mathgain mathkind 
  60.167  445.333 
------------------------------------------------ 
INDICES: 6
mathgain mathkind 
  78.667  457.083 
------------------------------------------------ 
INDICES: 7
mathgain mathkind 
  57.357  442.071 
------------------------------------------------ 
INDICES: 8
mathgain mathkind 
   47.25   498.69 
------------------------------------------------ 
INDICES: 9
mathgain mathkind 
  34.833  475.333 
------------------------------------------------ 
INDICES: 10
mathgain mathkind 
  74.944  441.333 
------------------------------------------------ 
INDICES: 11
mathgain mathkind 
  50.452  499.806 
------------------------------------------------ 
INDICES: 12
mathgain mathkind 
  52.407  462.519 
------------------------------------------------ 
INDICES: 13
mathgain mathkind 
  47.667  479.444 
------------------------------------------------ 
INDICES: 14
mathgain mathkind 
  44.333  468.933 
------------------------------------------------ 
INDICES: 15
mathgain mathkind 
   75.00   445.92 
------------------------------------------------ 
INDICES: 16
mathgain mathkind 
  91.833  429.167 
------------------------------------------------ 
INDICES: 17
mathgain mathkind 
  75.444  417.667 
------------------------------------------------ 
INDICES: 18
mathgain mathkind 
   89.75   389.50 
------------------------------------------------ 
INDICES: 19
mathgain mathkind 
  55.545  446.273 
------------------------------------------------ 
INDICES: 20
mathgain mathkind 
   61.75   453.50 
------------------------------------------------ 
INDICES: 21
mathgain mathkind 
  56.706  450.118 
------------------------------------------------ 
INDICES: 22
mathgain mathkind 
   39.50   447.75 
------------------------------------------------ 
INDICES: 23
mathgain mathkind 
    70.0    469.2 
------------------------------------------------ 
INDICES: 24
mathgain mathkind 
  37.625  476.000 
------------------------------------------------ 
INDICES: 25
mathgain mathkind 
  28.286  449.429 
------------------------------------------------ 
INDICES: 26
mathgain mathkind 
  57.933  459.867 
------------------------------------------------ 
INDICES: 27
mathgain mathkind 
  58.667  496.952 
------------------------------------------------ 
INDICES: 28
mathgain mathkind 
    46.5    454.3 
------------------------------------------------ 
INDICES: 29
mathgain mathkind 
  44.625  498.125 
------------------------------------------------ 
INDICES: 30
mathgain mathkind 
  27.667  442.333 
------------------------------------------------ 
INDICES: 31
mathgain mathkind 
  50.636  444.227 
------------------------------------------------ 
INDICES: 32
mathgain mathkind 
  52.667  499.222 
------------------------------------------------ 
INDICES: 33
mathgain mathkind 
  62.591  450.455 
------------------------------------------------ 
INDICES: 34
mathgain mathkind 
  50.714  444.429 
------------------------------------------------ 
INDICES: 35
mathgain mathkind 
  30.182  481.091 
------------------------------------------------ 
INDICES: 36
mathgain mathkind 
   72.00   468.25 
------------------------------------------------ 
INDICES: 37
mathgain mathkind 
   51.00   435.09 
------------------------------------------------ 
INDICES: 38
mathgain mathkind 
  47.778  454.556 
------------------------------------------------ 
INDICES: 39
mathgain mathkind 
   27.25   503.58 
------------------------------------------------ 
INDICES: 40
mathgain mathkind 
  33.286  485.143 
------------------------------------------------ 
INDICES: 41
mathgain mathkind 
  68.778  471.000 
------------------------------------------------ 
INDICES: 42
mathgain mathkind 
  59.056  468.167 
------------------------------------------------ 
INDICES: 43
mathgain mathkind 
    55.5    470.0 
------------------------------------------------ 
INDICES: 44
mathgain mathkind 
   69.00   465.35 
------------------------------------------------ 
INDICES: 45
mathgain mathkind 
    66.6    474.8 
------------------------------------------------ 
INDICES: 46
mathgain mathkind 
   54.00   457.23 
------------------------------------------------ 
INDICES: 47
mathgain mathkind 
    73.8    436.5 
------------------------------------------------ 
INDICES: 48
mathgain mathkind 
   49.00   430.33 
------------------------------------------------ 
INDICES: 49
mathgain mathkind 
    81.5    457.5 
------------------------------------------------ 
INDICES: 50
mathgain mathkind 
  43.917  497.250 
------------------------------------------------ 
INDICES: 51
mathgain mathkind 
   56.50   460.25 
------------------------------------------------ 
INDICES: 52
mathgain mathkind 
   42.00   478.44 
------------------------------------------------ 
INDICES: 53
mathgain mathkind 
   72.25   473.50 
------------------------------------------------ 
INDICES: 54
mathgain mathkind 
    36.2    497.8 
------------------------------------------------ 
INDICES: 55
mathgain mathkind 
  53.538  472.923 
------------------------------------------------ 
INDICES: 56
mathgain mathkind 
    52.1    497.1 
------------------------------------------------ 
INDICES: 57
mathgain mathkind 
   70.50   450.25 
------------------------------------------------ 
INDICES: 58
mathgain mathkind 
      50      484 
------------------------------------------------ 
INDICES: 59
mathgain mathkind 
   45.00   509.25 
------------------------------------------------ 
INDICES: 60
mathgain mathkind 
  73.846  461.385 
------------------------------------------------ 
INDICES: 61
mathgain mathkind 
  43.364  458.727 
------------------------------------------------ 
INDICES: 62
mathgain mathkind 
   54.00   521.54 
------------------------------------------------ 
INDICES: 63
mathgain mathkind 
   55.00   493.33 
------------------------------------------------ 
INDICES: 64
mathgain mathkind 
    67.4    450.7 
------------------------------------------------ 
INDICES: 65
mathgain mathkind 
  56.333  481.222 
------------------------------------------------ 
INDICES: 66
mathgain mathkind 
  59.875  478.000 
------------------------------------------------ 
INDICES: 67
mathgain mathkind 
  80.083  443.250 
------------------------------------------------ 
INDICES: 68
mathgain mathkind 
   78.00   462.69 
------------------------------------------------ 
INDICES: 69
mathgain mathkind 
    64.6    424.0 
------------------------------------------------ 
INDICES: 70
mathgain mathkind 
  80.684  450.421 
------------------------------------------------ 
INDICES: 71
mathgain mathkind 
  52.481  503.741 
------------------------------------------------ 
INDICES: 72
mathgain mathkind 
  50.727  508.545 
------------------------------------------------ 
INDICES: 73
mathgain mathkind 
    51.3    451.1 
------------------------------------------------ 
INDICES: 74
mathgain mathkind 
  58.333  446.667 
------------------------------------------------ 
INDICES: 75
mathgain mathkind 
  76.067  470.200 
------------------------------------------------ 
INDICES: 76
mathgain mathkind 
   44.00   454.67 
------------------------------------------------ 
INDICES: 77
mathgain mathkind 
  55.458  482.375 
------------------------------------------------ 
INDICES: 78
mathgain mathkind 
   35.40   461.93 
------------------------------------------------ 
INDICES: 79
mathgain mathkind 
  63.667  457.667 
------------------------------------------------ 
INDICES: 80
mathgain mathkind 
  74.571  457.429 
------------------------------------------------ 
INDICES: 81
mathgain mathkind 
  65.667  454.111 
------------------------------------------------ 
INDICES: 82
mathgain mathkind 
  56.632  450.789 
------------------------------------------------ 
INDICES: 83
mathgain mathkind 
  56.083  476.583 
------------------------------------------------ 
INDICES: 84
mathgain mathkind 
  81.571  430.357 
------------------------------------------------ 
INDICES: 85
mathgain mathkind 
    52.8    504.8 
------------------------------------------------ 
INDICES: 86
mathgain mathkind 
  34.429  461.286 
------------------------------------------------ 
INDICES: 87
mathgain mathkind 
    45.8    492.0 
------------------------------------------------ 
INDICES: 88
mathgain mathkind 
  38.667  437.000 
------------------------------------------------ 
INDICES: 89
mathgain mathkind 
   49.75   488.75 
------------------------------------------------ 
INDICES: 90
mathgain mathkind 
  50.333  461.000 
------------------------------------------------ 
INDICES: 91
mathgain mathkind 
  48.438  461.938 
------------------------------------------------ 
INDICES: 92
mathgain mathkind 
  64.111  469.556 
------------------------------------------------ 
INDICES: 93
mathgain mathkind 
  41.857  500.238 
------------------------------------------------ 
INDICES: 94
mathgain mathkind 
  82.533  446.800 
------------------------------------------------ 
INDICES: 95
mathgain mathkind 
    67.4    468.0 
------------------------------------------------ 
INDICES: 96
mathgain mathkind 
  46.125  462.750 
------------------------------------------------ 
INDICES: 97
mathgain mathkind 
  65.833  470.833 
------------------------------------------------ 
INDICES: 98
mathgain mathkind 
    49.0    429.5 
------------------------------------------------ 
INDICES: 99
mathgain mathkind 
  51.947  452.421 
------------------------------------------------ 
INDICES: 100
mathgain mathkind 
  61.692  476.692 
------------------------------------------------ 
INDICES: 101
mathgain mathkind 
  64.062  456.625 
------------------------------------------------ 
INDICES: 102
mathgain mathkind 
  53.455  453.091 
------------------------------------------------ 
INDICES: 103
mathgain mathkind 
  99.875  427.250 
------------------------------------------------ 
INDICES: 104
mathgain mathkind 
  87.667  444.333 
------------------------------------------------ 
INDICES: 105
mathgain mathkind 
    61.4    460.0 
------------------------------------------------ 
INDICES: 106
mathgain mathkind 
     9.5    526.5 
------------------------------------------------ 
INDICES: 107
mathgain mathkind 
    48.2    464.2 
> detach(SIIdata)
> 
> ###################################################
> ### code chunk: R3.13a
> ###################################################
> library(reshape)
> idvars <- c("schoolid") 
> mvars <- c("classid", "childid")
> dtm1 <- melt(SIIdata, id.vars = idvars, measure.vars = mvars)
> names(cst1  <- 
+   cast(dtm1, 
+        fun.aggregate = function(el) length(unique(el))))
[1] "schoolid" "classid"  "childid" 
> names(cst1) <- c("schoolid", "clssn", "schlN")
> 
> ###################################################
> ### code chunk: R3.13b
> ###################################################
> mvars <- c("mathgain", "mathkind", "housepov")
> dtm2 <- melt(SIIdata, id.vars = idvars, measure.vars = mvars)
> names(cst2 <- cast(dtm2, fun.aggregate = mean))
[1] "schoolid" "mathgain" "mathkind" "housepov"
> names(cst2) <- c("schoolid", "mthgMn", "mthkMn", "housepov")
> 
> 
> ###################################################
> ### code chunk: R3.13c
> ###################################################
> (schlDt  <- merge(cst1, cst2, sort = FALSE))
    schoolid clssn schlN mthgMn mthkMn housepov
1          1     2    11 59.636 458.36    0.082
2          2     3    10 65.000 487.90    0.082
3          3     4    14 88.857 469.14    0.086
4          4     2     6 35.167 462.67    0.365
5          5     1     6 60.167 445.33    0.511
6          6     3    12 78.667 457.08    0.044
7          7     4    14 57.357 442.07    0.148
8          8     3    16 47.250 498.69    0.085
9          9     3     6 34.833 475.33    0.537
10        10     4    18 74.944 441.33    0.346
11        11     9    31 50.452 499.81    0.101
12        12     5    27 52.407 462.52    0.106
13        13     2     9 47.667 479.44    0.055
14        14     3    15 44.333 468.93    0.157
15        15     5    13 75.000 445.92    0.121
16        16     2     6 91.833 429.17    0.113
17        17     5     9 75.444 417.67    0.261
18        18     1     4 89.750 389.50    0.272
19        19     3    11 55.545 446.27    0.058
20        20     3    12 61.750 453.50    0.532
21        21     3    17 56.706 450.12    0.187
22        22     1     4 39.500 447.75    0.438
23        23     3     5 70.000 469.20    0.282
24        24     4     8 37.625 476.00    0.263
25        25     2     7 28.286 449.43    0.309
26        26     3    15 57.933 459.87    0.564
27        27     4    21 58.667 496.95    0.050
28        28     4    10 46.500 454.30    0.214
29        29     2     8 44.625 498.12    0.102
30        30     1     3 27.667 442.33    0.085
31        31     4    22 50.636 444.23    0.012
32        32     3     9 52.667 499.22    0.261
33        33     5    22 62.591 450.45    0.047
34        34     2     7 50.714 444.43    0.303
35        35     2    11 30.182 481.09    0.130
36        36     2     8 72.000 468.25    0.088
37        37     4    11 51.000 435.09    0.249
38        38     2     9 47.778 454.56    0.170
39        39     4    12 27.250 503.58    0.123
40        40     2     7 33.286 485.14    0.279
41        41     3     9 68.778 471.00    0.036
42        42     4    18 59.056 468.17    0.157
43        43     2     4 55.500 470.00    0.179
44        44     4    17 69.000 465.35    0.347
45        45     1     5 66.600 474.80    0.164
46        46     5    13 54.000 457.23    0.238
47        47     3    10 73.800 436.50    0.257
48        48     1     6 49.000 430.33    0.159
49        49     2     8 81.500 457.50    0.142
50        50     3    12 43.917 497.25    0.044
51        51     1     4 56.500 460.25    0.096
52        52     2     9 42.000 478.44    0.138
53        53     2     8 72.250 473.50    0.101
54        54     2    10 36.200 497.80    0.137
55        55     3    13 53.538 472.92    0.065
56        56     2    10 52.100 497.10    0.040
57        57     5     8 70.500 450.25    0.289
58        58     1     5 50.000 484.00    0.101
59        59     2     4 45.000 509.25    0.362
60        60     2    13 73.846 461.38    0.243
61        61     4    11 43.364 458.73    0.335
62        62     2    13 54.000 521.54    0.170
63        63     1     3 55.000 493.33    0.072
64        64     2    10 67.400 450.70    0.180
65        65     3     9 56.333 481.22    0.050
66        66     3     8 59.875 478.00    0.509
67        67     3    12 80.083 443.25    0.339
68        68     5    16 78.000 462.69    0.209
69        69     2     5 64.600 424.00    0.523
70        70     5    19 80.684 450.42    0.430
71        71     5    27 52.481 503.74    0.085
72        72     3    11 50.727 508.55    0.249
73        73     2    10 51.300 451.10    0.117
74        74     2     3 58.333 446.67    0.202
75        75     4    15 76.067 470.20    0.367
76        76     5    27 44.000 454.67    0.161
77        77     4    24 55.458 482.38    0.041
78        78     3    15 35.400 461.93    0.407
79        79     3    12 63.667 457.67    0.351
80        80     2     7 74.571 457.43    0.190
81        81     2     9 65.667 454.11    0.210
82        82     4    19 56.632 450.79    0.103
83        83     2    12 56.083 476.58    0.141
84        84     3    14 81.571 430.36    0.255
85        85     5    20 52.800 504.80    0.107
86        86     3     7 34.429 461.29    0.537
87        87     4    10 45.800 492.00    0.306
88        88     2     6 38.667 437.00    0.546
89        89     1     4 49.750 488.75    0.092
90        90     2     3 50.333 461.00    0.259
91        91     4    16 48.438 461.94    0.047
92        92     3     9 64.111 469.56    0.114
93        93     4    21 41.857 500.24    0.068
94        94     4    15 82.533 446.80    0.127
95        95     2     5 67.400 468.00    0.067
96        96     3     8 46.125 462.75    0.107
97        97     1     6 65.833 470.83    0.075
98        98     1     2 49.000 429.50    0.085
99        99     5    19 51.947 452.42    0.095
100      100     4    13 61.692 476.69    0.071
101      101     4    16 64.062 456.62    0.064
102      102     2    11 53.455 453.09    0.126
103      103     3     8 99.875 427.25    0.076
104      104     2     6 87.667 444.33    0.054
105      105     2    10 61.400 460.00    0.099
106      106     1     2  9.500 526.50    0.266
107      107     2    10 48.200 464.20    0.177
> rm(cst1, cst2)
> 
> ###################################################
> ### code chunk: R3.14a
> ###################################################
> summary(schlDt$housepov)
   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. 
 0.0120  0.0855  0.1480  0.1940  0.2640  0.5640 
> 
> #### Auxiliary step: Setting limits for y-axis
> range(SIIdata$mathgain)
[1] -110  253
> ylims <- c(-120, 260)
> 
> ###################################################
> ### code chunk: R3.14b
> ###################################################
> library(lattice)
> xyplot(mthgMn ~ housepov,                         # Fig. 3.8a
+        schlDt, type = c("p", "smooth"), 
+        ylim = ylims, grid = TRUE) 
> xyplot(mthgMn ~ mthkMn,                           # Fig. 3.8b
+        schlDt, type = c("p", "smooth"), 
+        ylim = ylims, grid = TRUE) 
> 
> ###################################################
> ### code chunk: R 3.15
> ###################################################
> (clssN <- xtabs(~ classid, SIIdata))
classid
  1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16 
  5   3   3   6   1   5   1   4   3   2   4   5   9   4   1   6 
 17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32 
  3   1   2   3   4   8   1   1   4  10   6   5   3   4   4   4 
 33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48 
  4   1   4   1   1   7   2   3   5  10   3   6   5   5   1   4 
 49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 
  6   4   6   2   5   4   5   5   4   1   4   3   2   2   2   5 
 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80 
  1   6   2   4   3   1   2   3   3   1   6   4   1   8   5   6 
 81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96 
  8   5   7   1   7   5   1   2   3   2   4   1   1   6   2   8 
 97  98  99 100 101 102 103 104 105 106 107 108 109 110 111 112 
  2   5   1   1   2   3   3   6   4   2   4   3   4   4   3   2 
113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 
  3   4   4   2   8   1   1   8   6   6   8   1   4   6   3   4 
129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 
  3   4   2   3   3   4   7   6   2   5   4   2   5   4   6   3 
145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 
  5   3   5   4   4   1   2   6   6   2   3   6   4   8   4   3 
161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 
  4   2   1   5   6   4   5   7   6   2   1   4   2   7   3   4 
177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 
  3   2   2   6   1   5   3   5   1   6   1   4   9   8   1   2 
193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 
  2   2   4   3   2   2   1   6   5   3   2   2   9   5   6   4 
209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 
  2   3   4   4   3   1   2   2   8   2   4   2   2   4   4   5 
225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 
  3   2   2   3   5   2   8   2   1   7   6   2   3   1   2   3 
241 242 243 244 245 246 247 248 249 250 251 252 253 254 255 256 
  5   7   4   1   3   4   5   6   1   2   3   6   9   2   6   1 
257 258 259 260 261 262 263 264 265 266 267 268 269 270 271 272 
  4   3   8   3   1   5   3   7   4   5   3   5   2   3   3   1 
273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 
  5   1   3   7   7   8   7   5   4   2   2   3   3   6   5   4 
289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 
  5   3   4   4   4   3   1   7   5   5   6   5   2   7   4   4 
305 306 307 308 309 310 311 312 
  4   4   4   3   3   3   2   4 
> sum(clssN)                           # Total number of pupils
[1] 1190
> range(clssN)
[1]  1 10
> (clssCnt <- xtabs(~clssN)) # Distribution of no. of pupils/classes
clssN
 1  2  3  4  5  6  7  8  9 10 
42 53 53 61 39 31 14 13  4  2 
> sum(clssCnt)                         # Total number of classes
[1] 312
> 
> 
> ###################################################
> ### Preparatory steps for R3.16.
> ### Steps similar to those shown in R13.3.
> ###################################################
> 
> # See R 2.12b how to obtain vector nms2 containing class-specific variables
> nms2 <- c("yearstea","mathknow", "mathprep", "classid") 
> library(reshape)
> (idvars <- c(nms2,"housepov"))
[1] "yearstea" "mathknow" "mathprep" "classid"  "housepov"
> mvars   <- c("childid")
> dtm1    <- melt(SIIdata, id.vars=idvars, measure.vars=mvars)
> cst1    <- cast(dtm1, 
+              classid + housepov + mathknow + mathprep ~ variable, 
+              function(el) length(unique(el)))
> names(cst1)[5] <- "clssN"
> 
> mvars   <- c("mathgain","mathkind")
> dtm2    <- melt(SIIdata, id.vars="classid", measure.vars=mvars)
> cst2    <- cast(dtm2, classid~variable, mean)
> names(cst2) <- c("classid","mthgMn","mthkMn")
> clssDt  <- merge(cst1, cst2, sort = FALSE)
> 
> ###################################################
> ### code chunk: R 3.16
> ###################################################
> clssDt
    classid housepov mathknow mathprep clssN   mthgMn mthkMn
1         1    0.335    -0.72     2.50     5  47.8000 459.00
2         2    0.303     0.58     3.00     3  65.6667 454.00
3         3    0.040     0.85     2.75     3  15.6667 492.67
4         4    0.339     1.08     5.33     6  91.5000 437.00
5         5    0.121     0.15     1.33     1 182.0000 342.00
6         6    0.187    -0.12     3.75     5  39.4000 438.00
7         7    0.261       NA     2.83     1  51.0000 429.00
8         8    0.161     0.41     3.00     4  22.7500 484.50
9         9    0.279    -1.09     1.50     3  -9.0000 483.00
10       10    0.261    -1.26     3.25     2 106.0000 400.00
11       11    0.086     0.45     3.83     4  85.0000 452.75
12       12    0.101       NA     6.00     5  50.0000 484.00
13       13    0.407     0.62     2.00     9  38.8889 468.56
14       14    0.101     0.47     2.00     4  91.5000 451.25
15       15    0.047       NA     2.30     1  34.0000 495.00
16       16    0.170    -0.52     2.50     6  56.0000 453.33
17       17    0.537    -1.05     1.25     3  40.6667 487.00
18       18    0.036    -0.10     2.83     1  65.0000 446.00
19       19    0.238     1.89     2.00     2  79.5000 422.50
20       20    0.106     0.32     3.00     3  49.0000 457.33
21       21    0.306     0.19     4.00     4  49.0000 483.25
22       22    0.170     0.89     2.74     8  50.2500 530.38
23       23    0.351     0.12     2.00     1  50.0000 436.00
24       24    0.065    -0.19     2.50     1  20.0000 497.00
25       25    0.044    -0.78     2.00     4  37.0000 509.00
26       26    0.047    -0.45     4.50    10  74.1000 452.60
27       27    0.041    -0.75     1.00     6  52.0000 473.17
28       28    0.161     2.14     2.30     5  58.4000 433.80
29       29    0.249     0.12     2.50     3  61.6667 507.00
30       30    0.532    -1.84     3.33     4  54.0000 442.25
31       31    0.272     1.13     2.25     4  89.7500 389.50
32       32    0.047       NA     2.30     4  30.5000 483.75
33       33    0.099    -1.57     3.00     4  62.2500 433.00
34       34    0.362    -1.28     1.50     1   6.0000 536.00
35       35    0.065    -0.27     2.25     4  60.2500 475.00
36       36    0.289    -0.26     3.00     1  89.0000 431.00
37       37    0.076    -1.79     4.50     1  71.0000 455.00
38       38    0.180    -0.42     3.50     7  69.2857 442.71
39       39    0.367    -1.46     1.83     2  63.0000 471.00
40       40    0.289     0.65     3.50     3  93.6667 429.33
41       41    0.157     0.86     5.25     5  35.6000 459.40
42       42    0.367    -0.19     2.50    10  80.8000 470.60
43       43    0.282    -0.76     2.25     3  53.0000 479.00
44       44    0.126    -1.28     2.00     6  37.1667 454.33
45       45    0.047    -0.76     1.00     5  24.4000 474.00
46       46    0.170     0.89     2.30     5  60.0000 507.40
47       47    0.282     0.12     2.00     1 117.0000 462.00
48       48    0.365    -1.05     2.00     4  64.5000 460.25
49       49    0.106    -0.84     1.50     6  54.8333 449.00
50       50    0.036    -0.35     5.25     4  56.5000 474.50
51       51    0.012       NA     4.00     6  45.5000 429.83
52       52    0.259    -0.09     2.00     2  10.5000 479.50
53       53    0.041       NA     2.30     5  63.0000 473.60
54       54    0.157    -1.28     2.00     4  54.0000 492.25
55       55    0.263    -1.02     2.25     5  24.6000 468.40
56       56    0.130     0.71     5.00     5  30.0000 477.80
57       57    0.209     0.04     1.50     4  51.2500 498.25
58       58    0.537    -0.42     1.17     1  41.0000 482.00
59       59    0.096     0.80     2.00     4  56.5000 460.25
60       60    0.054     0.89     2.00     3  65.6667 458.67
61       61    0.257    -0.78     2.50     2  51.0000 437.50
62       62    0.266    -0.48     2.50     2   9.5000 526.50
63       63    0.088    -0.12     3.00     2  55.5000 500.00
64       64    0.055     0.12     2.50     5  53.4000 468.00
65       65    0.537     1.50     3.25     1  20.0000 525.00
66       66    0.107     1.44     2.17     6  38.3333 517.83
67       67    0.546    -0.64     2.00     2  21.0000 474.00
68       68    0.064    -0.80     2.50     4  37.2500 486.25
69       69    0.238     0.03     2.67     3  38.0000 485.33
70       70    0.157     1.65     2.75     1  50.0000 463.00
71       71    0.238     1.13     1.75     2  78.5000 450.00
72       72    0.306    -0.23     2.00     3  45.6667 507.33
73       73    0.339    -1.02     3.50     3  81.3333 450.33
74       74    0.071    -1.28     1.50     1  10.0000 456.00
75       75    0.075     0.44     2.50     6  65.8333 470.83
76       76    0.255    -1.89     2.00     4  75.0000 426.50
77       77    0.263    -1.68     3.00     1 -16.0000 539.00
78       78    0.564     0.61     2.25     8  67.3750 455.25
79       79    0.123    -0.76     1.50     5  18.2000 507.80
80       80    0.085     1.24     2.50     6  50.3333 485.33
81       81    0.106     1.21     2.00     8  61.5000 446.62
82       82    0.257     1.57     3.17     5  92.4000 421.00
83       83    0.430    -1.28     2.00     7  84.8571 448.71
84       84    0.107    -0.52     4.00     1  65.0000 514.00
85       85    0.121    -0.70     6.00     7  81.0000 428.57
86       86    0.101     0.12     4.00     5  58.6000 506.20
87       87    0.261    -0.42     2.50     1  54.0000 441.00
88       88    0.047    -0.72     5.50     2  21.5000 480.50
89       89    0.148     1.53     2.33     3  55.0000 428.00
90       90    0.523    -0.52     2.00     2  86.5000 404.00
91       91    0.509    -0.54     2.17     4  64.2500 470.00
92       92    0.121    -0.34     2.25     1  94.0000 449.00
93       93    0.263     0.72     2.25     1 106.0000 431.00
94       94    0.532    -0.50     2.50     6  63.0000 462.00
95       95    0.050    -1.36     5.00     2  21.0000 457.00
96       96    0.177     1.45     2.67     8  46.1250 464.50
97       97    0.309    -0.77     2.17     2  32.5000 456.00
98       98    0.058    -0.41     2.25     5  53.6000 443.20
99       99    0.071    -2.34     2.30     1  58.0000 438.00
100     100    0.047     0.12     4.00     1  39.0000 443.00
101     101    0.532    -0.84     2.25     2  73.5000 450.50
102     102    0.564     1.31     4.75     3  54.0000 475.67
103     103    0.249    -1.53     2.00     3  20.0000 462.00
104     104    0.050     0.43     3.00     6  59.0000 496.00
105     105    0.142    -1.73     2.25     4 103.5000 440.00
106     106    0.306    -0.40     1.50     2  24.0000 509.50
107     107    0.148       NA     2.50     4  52.0000 460.25
108     108    0.362     0.02     1.00     3  58.0000 500.33
109     109    0.107       NA     2.30     4  49.0000 455.25
110     110    0.058    -1.39     5.50     4  51.7500 458.00
111     111    0.407       NA     1.50     3  42.6667 441.67
112     112    0.351    -1.56     2.00     2  58.5000 431.50
113     113    0.101    -0.42     2.50     3  50.0000 515.00
114     114    0.214    -0.92     2.00     4  31.2500 468.00
115     115    0.102     0.46     3.75     4  54.5000 488.75
116     116    0.210     1.96     2.50     2  88.0000 454.00
117     117    0.065    -0.76     4.00     8  54.3750 468.88
118     118    0.214    -0.72     2.00     1  71.0000 414.00
119     119    0.121     0.35     2.50     1  39.0000 506.00
120     120    0.085     0.45     2.00     8  66.1250 517.50
121     121    0.243     0.47     1.00     6  88.1667 452.00
122     122    0.130     1.86     2.00     6  30.3333 483.83
123     123    0.068     2.61     2.50     8  44.7500 497.38
124     124    0.335    -0.72     2.00     1  52.0000 448.00
125     125    0.249    -0.28     3.00     4  75.5000 417.25
126     126    0.068    -0.82     2.50     6  25.8333 499.67
127     127    0.044    -1.33     2.00     3  54.0000 484.33
128     128    0.050     0.89     2.50     4  71.2500 479.75
129     129    0.054     1.04     3.75     3 109.6667 430.00
130     130    0.187    -0.17     3.17     4  64.5000 447.50
131     131    0.101    -0.13     2.25     2  49.5000 501.00
132     132    0.537     0.00     2.50     3  25.3333 449.67
133     133    0.238       NA     2.50     3  50.3333 451.67
134     134    0.127    -0.52     3.00     4  99.2500 472.50
135     135    0.071       NA     2.00     7  71.8571 478.86
136     136    0.161     0.85     2.33     6  45.3333 459.17
137     137    0.086     0.99     2.25     2 105.5000 462.50
138     138    0.064     0.73     2.75     5  78.2000 432.60
139     139    0.564     0.59     2.00     4  42.0000 457.25
140     140    0.067    -1.39     2.00     2  47.0000 505.50
141     141    0.157     0.12     3.00     5  39.0000 465.80
142     142    0.036    -0.68     2.25     4  82.0000 473.75
143     143    0.255       NA     1.50     6  87.0000 433.00
144     144    0.067     0.12     2.00     3  81.0000 443.00
145     145    0.086     1.61     3.00     5  96.0000 482.20
146     146    0.430     1.15     2.33     3  90.0000 443.00
147     147    0.085    -0.14     2.00     5  77.4000 491.60
148     148    0.249    -0.67     3.00     4  40.7500 515.75
149     149    0.101     0.22     2.50     4  53.0000 495.75
150     150    0.263    -0.79     2.50     1  88.0000 496.00
151     151    0.047    -0.64     1.25     2  77.5000 442.00
152     152    0.430    -0.30     3.25     6  81.3333 440.00
153     153    0.159       NA     2.00     6  49.0000 430.33
154     154    0.367     0.06     2.00     2  64.5000 504.50
155     155    0.257     1.12     2.00     3  58.0000 461.67
156     156    0.012    -0.72     2.00     6  51.1667 449.17
157     157    0.107       NA     2.00     4  62.5000 506.75
158     158    0.187    -0.13     4.50     8  63.6250 459.00
159     159    0.438    -0.72     2.00     4  39.5000 447.75
160     160    0.082       NA     2.00     3  65.6667 473.00
161     161    0.255    -0.69     1.50     4  80.0000 430.25
162     162    0.148     1.10     2.33     2  85.0000 403.50
163     163    0.282     0.55     2.25     1  74.0000 447.00
164     164    0.103       NA     2.00     5  56.2000 447.20
165     165    0.141     1.50     6.00     6  66.8333 479.83
166     166    0.055     1.19     2.00     4  40.5000 493.75
167     167    0.157    -0.42     2.00     5  58.4000 481.60
168     168    0.040     0.24     3.00     7  67.7143 499.00
169     169    0.103     1.95     2.25     6  66.6667 465.83
170     170    0.058    -0.17     1.75     2  68.0000 430.50
171     171    0.289     0.57     2.50     1  69.0000 435.00
172     172    0.101    -0.52     2.24     4  12.5000 525.50
173     173    0.114     0.10     2.50     2  54.0000 479.00
174     174    0.210     1.75     2.00     7  59.2857 454.14
175     175    0.085     0.34     2.00     3  27.6667 442.33
176     176    0.347     1.94     2.50     4  75.2500 449.00
177     177    0.261    -2.31     3.33     3  83.6667 409.67
178     178    0.346    -1.06     3.25     2  87.0000 418.00
179     179    0.365       NA     2.00     2 -23.5000 467.50
180     180    0.088     0.48     1.50     6  77.5000 457.67
181     181    0.367    -0.27     2.00     1  78.0000 396.00
182     182    0.068       NA     2.00     5  58.8000 495.80
183     183    0.407    -0.52     2.00     3  17.6667 462.33
184     184    0.103     0.89     2.25     5  45.0000 440.60
185     185    0.107    -0.72     2.17     1  12.0000 501.00
186     186    0.107     0.28     2.75     6  37.3333 489.67
187     187    0.306    -1.20     4.50     1  77.0000 446.00
188     188    0.303     0.50     4.17     4  39.5000 437.25
189     189    0.041    -0.47     5.00     9  55.7778 484.00
190     190    0.050     0.15     2.17     8  62.3750 496.12
191     191    0.261     0.12     2.00     1 100.0000 470.00
192     192    0.335     0.89     2.00     2  26.0000 445.00
193     193    0.076    -0.55     4.00     2  81.0000 444.50
194     194    0.068       NA     2.30     2  36.0000 524.50
195     195    0.101     0.31     2.50     4  59.0000 500.25
196     196    0.107    -0.27     2.00     3  95.6667 503.33
197     197    0.082    -1.25     2.50     2  49.5000 466.00
198     198    0.123    -0.36     1.75     2  10.5000 491.00
199     199    0.114    -0.65     2.25     1  34.0000 448.00
200     200    0.099     1.30     2.25     6  60.8333 478.00
201     201    0.101    -0.73     3.00     5  37.0000 483.80
202     202    0.214     0.74     3.00     3   7.6667 496.33
203     203    0.214    -0.60     1.00     2 123.0000 384.00
204     204    0.261    -0.83     2.25     2  32.0000 524.50
205     205    0.095     2.33     1.58     9  55.4444 463.11
206     206    0.113     0.89     2.30     5  88.6000 437.00
207     207    0.157     0.27     3.00     6  52.3333 459.83
208     208    0.346    -0.48     2.50     4  65.0000 443.50
209     209    0.085     0.51     3.00     2  75.0000 520.00
210     210    0.249     1.13     2.00     3  53.3333 426.33
211     211    0.082    -0.72     2.33     4  69.0000 504.75
212     212    0.142    -0.72     3.50     4  59.5000 475.00
213     213    0.117     1.62     2.50     3  47.3333 452.33
214     214    0.095    -1.39     3.17     1  24.0000 385.00
215     215    0.064    -1.28     2.50     2  29.0000 484.50
216     216    0.261    -1.42     3.00     2  55.5000 430.00
217     217    0.082    -0.11     3.25     8  57.3750 452.88
218     218    0.509     0.00     2.75     2  49.5000 487.00
219     219    0.347     1.31     2.00     4  59.0000 463.25
220     220    0.179     0.92     2.25     2  47.5000 470.50
221     221    0.085    -1.35     2.50     2  49.0000 429.50
222     222    0.190    -1.04     2.42     4  88.2500 451.50
223     223    0.102     0.28     2.00     4  34.7500 507.50
224     224    0.127    -2.50     3.00     5  56.2000 463.80
225     225    0.103    -1.12     2.50     3  56.6667 443.67
226     226    0.095       NA     3.00     2  58.5000 448.50
227     227    0.179     2.61     2.25     2  63.5000 469.50
228     228    0.086     1.14     2.17     3  71.0000 473.67
229     229    0.047     1.05     2.75     5  86.4000 409.00
230     230    0.050     0.01     1.00     2  13.5000 526.50
231     231    0.047    -0.14     1.00     8  58.0000 455.25
232     232    0.202    -1.64     3.00     2  58.0000 453.50
233     233    0.101    -1.32     2.00     1  54.0000 496.00
234     234    0.012     1.18     5.25     7  76.2857 444.00
235     235    0.141    -0.35     3.50     6  45.3333 473.33
236     236    0.095     0.59     1.17     2  80.5000 429.50
237     237    0.107    -0.72     2.00     3  53.6667 460.00
238     238    0.259     0.96     4.00     1 130.0000 424.00
239     239    0.177     0.50     2.00     2  56.5000 463.00
240     240    0.238    -1.44     3.17     3  40.3333 462.67
241     241    0.126    -1.25     1.83     5  73.0000 451.60
242     242    0.243    -1.43     2.00     7  61.5714 469.43
243     243    0.249    -0.38     2.00     4  52.5000 502.50
244     244    0.209    -0.07     6.00     1 214.0000 290.00
245     245    0.339    -0.66     1.00     3  56.0000 448.67
246     246    0.347     1.47     2.24     4  84.0000 453.75
247     247    0.076    -0.30     2.25     5 113.2000 414.80
248     248    0.114    -0.61     2.00     6  72.5000 470.00
249     249    0.249    -1.14     1.50     1  39.0000 452.00
250     250    0.289    -0.41     3.00     2  45.5000 491.00
251     251    0.106       NA     3.06     3  56.6667 452.00
252     252    0.261    -0.24     2.00     6  51.6667 495.67
253     253    0.351    -1.28     2.50     9  66.3333 465.89
254     254    0.044    -0.86     1.75     2 101.5000 475.50
255     255    0.138     1.91     1.67     6  49.6667 503.67
256     256    0.113    -0.48     4.00     1 108.0000 390.00
257     257    0.279    -1.04     2.50     4  65.0000 486.75
258     258    0.012    -1.21     2.00     3   0.0000 463.67
259     259    0.137     1.97     2.00     8  35.2500 494.88
260     260    0.121    -1.21     1.00     3  31.0000 500.00
261     261    0.430     0.12     2.50     1  68.0000 468.00
262     262    0.050    -0.59     2.00     5  70.4000 487.60
263     263    0.209    -0.75     2.00     3  58.3333 495.00
264     264    0.085     1.25     1.83     7  37.4286 506.00
265     265    0.085    -0.07     2.00     4  54.7500 490.50
266     266    0.095       NA     4.00     5  37.2000 457.40
267     267    0.335     0.84     4.25     3  44.6667 471.00
268     268    0.347    -0.61     2.00     5  60.0000 489.40
269     269    0.509     0.75     3.00     2  61.5000 485.00
270     270    0.138    -0.61     3.00     3  26.6667 428.00
271     271    0.209    -1.06     3.17     3  71.0000 446.67
272     272    0.289     0.89     2.50     1  34.0000 466.00
273     273    0.064    -1.70     3.75     5  85.4000 445.80
274     274    0.123       NA     2.00     1  48.0000 490.00
275     275    0.537    -1.21     2.50     3  48.3333 451.67
276     276    0.117       NA     2.30     7  53.0000 450.57
277     277    0.161     0.89     2.30     7  34.5714 457.00
278     278    0.346       NA     2.00     8  77.5000 450.50
279     279    0.085     0.28     1.50     7  21.4286 508.43
280     280    0.148    -0.79     3.33     5  52.0000 451.40
281     281    0.071    -1.74     3.50     4  57.7500 487.75
282     282    0.127     0.12     1.00     2  92.0000 376.50
283     283    0.537    -0.43     3.00     2  23.0000 454.50
284     284    0.050    -1.07     3.75     3  60.0000 499.33
285     285    0.101    -0.72     2.00     3  72.3333 493.33
286     286    0.044    -0.73     4.00     6  67.3333 470.67
287     287    0.161     2.61     3.25     5  58.2000 443.00
288     288    0.123    -1.09     2.75     4  41.7500 508.00
289     289    0.044     0.92     2.00     5  43.4000 495.60
290     290    0.523    -0.72     2.00     3  50.0000 437.33
291     291    0.044    -0.98     2.50     4  84.2500 427.50
292     292    0.092    -0.73     1.00     4  49.7500 488.75
293     293    0.101    -1.02     2.50     4  70.0000 479.50
294     294    0.180    -0.51     2.00     3  63.0000 469.33
295     295    0.202    -0.03     3.83     1  59.0000 433.00
296     296    0.157     0.61     2.50     7  69.0000 462.29
297     297    0.309     0.93     2.00     5  26.6000 446.80
298     298    0.209    -0.71     1.67     5  88.2000 459.00
299     299    0.511     0.22     3.75     6  60.1667 445.33
300     300    0.164     0.64     3.25     5  66.6000 474.80
301     301    0.137     1.61     2.00     2  40.0000 509.50
302     302    0.106    -0.19     2.50     7  39.5714 499.00
303     303    0.346     0.48     3.75     4  73.7500 432.50
304     304    0.085    -0.01     3.83     4  43.5000 491.75
305     305    0.041    -0.66     2.25     4  50.5000 503.50
306     306    0.127     1.55     1.00     4  94.0000 435.00
307     307    0.082       NA     2.30     4  68.7500 482.00
308     308    0.190     0.96     4.00     3  56.3333 465.33
309     309    0.170       NA     2.50     3  31.3333 457.00
310     310    0.072     0.96     2.00     3  55.0000 493.33
311     311    0.430    -1.22     4.50     2  56.5000 490.00
312     312    0.546    -1.37     2.00     4  47.5000 418.50
> 
> ###################################################
> ### code chunk for Figure 3.9
> ###################################################
> 
> library(lattice)
> 
> xyplot(mthgMn ~ housepov, data = clssDt,   # Fig. 3.9a
+        type = c("p", "smooth"),
+        ylim = ylims,
+        grid = TRUE)
> 
> xyplot(mthgMn ~ mthkMn, data = clssDt, 
+        type = c("p", "smooth"),
+        ylim = ylims,
+        grid = TRUE)
> 
> ###################################################
> ### code chunk: R 3.17a
> ###################################################
> auxDt <- merge(SIIdata, clssDt, sort = FALSE)
> 
> auxDt2  <- 
+   within(auxDt,
+          {
+           auxL  <- paste(classid, schoolid, sep = "\n:")
+           auxL1 <- paste(auxL, clssN, sep = "\n(")    
+           auxL2 <- paste(auxL1, ")", sep = "")       
+           clssF <-                                 # Factor clssF created
+             factor(schoolid:classid, labels = unique(auxL2))
+          })
> tmpDt <- subset(auxDt2, select = c(classid, schoolid, clssN, clssF))
> head(tmpDt, 4)                                    # First four records
  classid schoolid clssN        clssF
1     160        1     3 160\n:1\n(3)
2     160        1     3 160\n:1\n(3)
3     160        1     3 160\n:1\n(3)
4     217        1     8 217\n:1\n(8)
> tail(tmpDt, 4)                                    # Last four records
     classid schoolid clssN          clssF
1187      96      107     8  96\n:107\n(8)
1188      96      107     8  96\n:107\n(8)
1189     239      107     2 239\n:107\n(2)
1190     239      107     2 239\n:107\n(2)
> 
> 
> ###################################################
> ### code chunk: R 3.17b
> ###################################################
> library(lattice)
> dotplot(mathgain ~ clssF,                         # Fig. 3.10a
+         subset(auxDt2, schoolid %in% 1:4)) 
> 
> xyplot(mathgain ~ housepov, SIIdata,              # Fig. 3.10b
+        type = c("p", "smooth"))
> detach(package:lattice)
> 
> ##################################################
> ### SII Project: Cleanup
> ##################################################
> rm(schlN, mthgM)
> rm(idvars, mvars, dtm1, cst1, dtm2, cst2, schlDt)
> rm(ylims, clssN, clssCnt, nms2, clssDt)
> rm(auxDt, auxDt2, tmpDt)
> 
> #################################################
> ### FCAT Study: Target score (Section 3.6)
> #################################################
> 
> 
> ###################################################
> ### code chunk: R 3.18a
> ###################################################
> data(fcat, package = "nlmeU")
> scM <- with(fcat, tapply(scorec, list(id, target), mean))
> scM[c(1, 2, 539), ]
    T1(4) T2(6) T3(8) T4(5) T5(9) T6(6) T7(8) T8(6) T9(5)
1       4     6     4     1     7     6     6     5     5
2       3     4     6     2     7     4     6     3     3
539     0     3     5     1     6     3     5     2     4
> 
> 
> ###################################################
> ### code chunk: R 3.18b
> ###################################################
> library(lattice)
> histogram(~scorec|target, 
+    data= fcat, breaks = NULL
+ )
> detach(package:lattice)
> 
> ##################################################
> ##### Cleanup and sessionInfo 
> ##################################################
> rm(scM)
> 
> sessionInfo()             # At the end of the session
R version 2.15.1 (2012-06-22)
Platform: i386-pc-mingw32/i386 (32-bit)

locale:
[1] LC_COLLATE=C                          
[2] LC_CTYPE=English_United States.1252   
[3] LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods  
[7] base     

other attached packages:
[1] reshape_0.8.4 plyr_1.7.1   

loaded via a namespace (and not attached):
[1] grid_2.15.1    lattice_0.20-6 tools_2.15.1  
> 
> proc.time()
   user  system elapsed 
   3.19    0.14    3.37 
